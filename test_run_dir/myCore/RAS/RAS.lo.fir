circuit RAS : @[:@2.0]
  module RAS : @[:@3.2]
    input clock : Clock @[:@4.4]
    input reset : UInt<1> @[:@5.4]
    input io_push_valid : UInt<1> @[:@6.4]
    input io_push_bits : UInt<32> @[:@6.4]
    output io_peek : UInt<32> @[:@6.4]
    input io_pop : UInt<1> @[:@6.4]
  
    reg stack_0 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), stack_0) @[RAS.scala 15:18:@8.4]
    reg stack_1 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), stack_1) @[RAS.scala 15:18:@8.4]
    reg stack_2 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), stack_2) @[RAS.scala 15:18:@8.4]
    reg stack_3 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), stack_3) @[RAS.scala 15:18:@8.4]
    reg stack_4 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), stack_4) @[RAS.scala 15:18:@8.4]
    reg stack_5 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), stack_5) @[RAS.scala 15:18:@8.4]
    reg stack_6 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), stack_6) @[RAS.scala 15:18:@8.4]
    reg stack_7 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), stack_7) @[RAS.scala 15:18:@8.4]
    reg pos : UInt<3>, clock with :
      reset => (UInt<1>("h0"), pos) @[RAS.scala 16:22:@9.4]
    reg count : UInt<4>, clock with :
      reset => (UInt<1>("h0"), count) @[RAS.scala 17:22:@10.4]
    node empty = eq(count, UInt<1>("h0")) @[RAS.scala 18:27:@11.4]
    node _T_38 = add(pos, UInt<1>("h1")) @[RAS.scala 21:18:@14.4]
    node _T_39 = tail(_T_38, 1) @[RAS.scala 21:18:@15.4]
    node _T_41 = sub(pos, UInt<1>("h1")) @[RAS.scala 22:18:@17.4]
    node _T_42 = asUInt(_T_41) @[RAS.scala 22:18:@18.4]
    node _T_43 = tail(_T_42, 1) @[RAS.scala 22:18:@19.4]
    node _GEN_0 = validif(eq(UInt<1>("h0"), pos), stack_0) @[RAS.scala 24:11:@21.4]
    node _GEN_1 = mux(eq(UInt<1>("h1"), pos), stack_1, _GEN_0) @[RAS.scala 24:11:@21.4]
    node _GEN_2 = mux(eq(UInt<2>("h2"), pos), stack_2, _GEN_1) @[RAS.scala 24:11:@21.4]
    node _GEN_3 = mux(eq(UInt<2>("h3"), pos), stack_3, _GEN_2) @[RAS.scala 24:11:@21.4]
    node _GEN_4 = mux(eq(UInt<3>("h4"), pos), stack_4, _GEN_3) @[RAS.scala 24:11:@21.4]
    node _GEN_5 = mux(eq(UInt<3>("h5"), pos), stack_5, _GEN_4) @[RAS.scala 24:11:@21.4]
    node _GEN_6 = mux(eq(UInt<3>("h6"), pos), stack_6, _GEN_5) @[RAS.scala 24:11:@21.4]
    node _GEN_7 = mux(eq(UInt<3>("h7"), pos), stack_7, _GEN_6) @[RAS.scala 24:11:@21.4]
    node _stack_pos_0 = io_push_bits @[RAS.scala 28:18:@24.8 RAS.scala 28:18:@24.8]
    node _GEN_8 = mux(eq(UInt<1>("h0"), pos), _stack_pos_0, stack_0) @[RAS.scala 28:18:@24.8]
    node _GEN_9 = mux(eq(UInt<1>("h1"), pos), _stack_pos_0, stack_1) @[RAS.scala 28:18:@24.8]
    node _GEN_10 = mux(eq(UInt<2>("h2"), pos), _stack_pos_0, stack_2) @[RAS.scala 28:18:@24.8]
    node _GEN_11 = mux(eq(UInt<2>("h3"), pos), _stack_pos_0, stack_3) @[RAS.scala 28:18:@24.8]
    node _GEN_12 = mux(eq(UInt<3>("h4"), pos), _stack_pos_0, stack_4) @[RAS.scala 28:18:@24.8]
    node _GEN_13 = mux(eq(UInt<3>("h5"), pos), _stack_pos_0, stack_5) @[RAS.scala 28:18:@24.8]
    node _GEN_14 = mux(eq(UInt<3>("h6"), pos), _stack_pos_0, stack_6) @[RAS.scala 28:18:@24.8]
    node _GEN_15 = mux(eq(UInt<3>("h7"), pos), _stack_pos_0, stack_7) @[RAS.scala 28:18:@24.8]
    node _T_47 = neq(count, UInt<4>("h8")) @[RAS.scala 30:19:@27.8]
    node _T_49 = add(count, UInt<1>("h1")) @[RAS.scala 30:48:@29.10]
    node _T_50 = tail(_T_49, 1) @[RAS.scala 30:48:@30.10]
    node _GEN_16 = mux(_T_47, _T_50, count) @[RAS.scala 30:31:@28.8]
    node nextPos = _T_39 @[RAS.scala 19:21:@12.4 RAS.scala 21:11:@16.4]
    node _stack_nextPos = io_push_bits @[RAS.scala 31:22:@33.8 RAS.scala 31:22:@33.8]
    node _GEN_17 = mux(eq(UInt<1>("h0"), nextPos), _stack_nextPos, stack_0) @[RAS.scala 31:22:@33.8]
    node _GEN_18 = mux(eq(UInt<1>("h1"), nextPos), _stack_nextPos, stack_1) @[RAS.scala 31:22:@33.8]
    node _GEN_19 = mux(eq(UInt<2>("h2"), nextPos), _stack_nextPos, stack_2) @[RAS.scala 31:22:@33.8]
    node _GEN_20 = mux(eq(UInt<2>("h3"), nextPos), _stack_nextPos, stack_3) @[RAS.scala 31:22:@33.8]
    node _GEN_21 = mux(eq(UInt<3>("h4"), nextPos), _stack_nextPos, stack_4) @[RAS.scala 31:22:@33.8]
    node _GEN_22 = mux(eq(UInt<3>("h5"), nextPos), _stack_nextPos, stack_5) @[RAS.scala 31:22:@33.8]
    node _GEN_23 = mux(eq(UInt<3>("h6"), nextPos), _stack_nextPos, stack_6) @[RAS.scala 31:22:@33.8]
    node _GEN_24 = mux(eq(UInt<3>("h7"), nextPos), _stack_nextPos, stack_7) @[RAS.scala 31:22:@33.8]
    node _GEN_25 = mux(io_pop, _GEN_8, _GEN_17) @[RAS.scala 27:18:@23.6]
    node _GEN_26 = mux(io_pop, _GEN_9, _GEN_18) @[RAS.scala 27:18:@23.6]
    node _GEN_27 = mux(io_pop, _GEN_10, _GEN_19) @[RAS.scala 27:18:@23.6]
    node _GEN_28 = mux(io_pop, _GEN_11, _GEN_20) @[RAS.scala 27:18:@23.6]
    node _GEN_29 = mux(io_pop, _GEN_12, _GEN_21) @[RAS.scala 27:18:@23.6]
    node _GEN_30 = mux(io_pop, _GEN_13, _GEN_22) @[RAS.scala 27:18:@23.6]
    node _GEN_31 = mux(io_pop, _GEN_14, _GEN_23) @[RAS.scala 27:18:@23.6]
    node _GEN_32 = mux(io_pop, _GEN_15, _GEN_24) @[RAS.scala 27:18:@23.6]
    node _GEN_33 = mux(io_pop, count, _GEN_16) @[RAS.scala 27:18:@23.6]
    node _GEN_34 = mux(io_pop, pos, nextPos) @[RAS.scala 27:18:@23.6]
    node _T_53 = eq(empty, UInt<1>("h0")) @[RAS.scala 34:23:@38.6]
    node _T_54 = and(io_pop, _T_53) @[RAS.scala 34:21:@39.6]
    node _T_56 = sub(count, UInt<1>("h1")) @[RAS.scala 35:20:@41.8]
    node _T_57 = asUInt(_T_56) @[RAS.scala 35:20:@42.8]
    node _T_58 = tail(_T_57, 1) @[RAS.scala 35:20:@43.8]
    node _GEN_35 = mux(_T_54, _T_58, count) @[RAS.scala 34:31:@40.6]
    node prevPos = _T_43 @[RAS.scala 20:21:@13.4 RAS.scala 22:11:@20.4]
    node _GEN_36 = mux(_T_54, prevPos, pos) @[RAS.scala 34:31:@40.6]
    node _GEN_37 = mux(io_push_valid, _GEN_25, stack_0) @[RAS.scala 26:23:@22.4]
    node _GEN_38 = mux(io_push_valid, _GEN_26, stack_1) @[RAS.scala 26:23:@22.4]
    node _GEN_39 = mux(io_push_valid, _GEN_27, stack_2) @[RAS.scala 26:23:@22.4]
    node _GEN_40 = mux(io_push_valid, _GEN_28, stack_3) @[RAS.scala 26:23:@22.4]
    node _GEN_41 = mux(io_push_valid, _GEN_29, stack_4) @[RAS.scala 26:23:@22.4]
    node _GEN_42 = mux(io_push_valid, _GEN_30, stack_5) @[RAS.scala 26:23:@22.4]
    node _GEN_43 = mux(io_push_valid, _GEN_31, stack_6) @[RAS.scala 26:23:@22.4]
    node _GEN_44 = mux(io_push_valid, _GEN_32, stack_7) @[RAS.scala 26:23:@22.4]
    node _GEN_45 = mux(io_push_valid, _GEN_33, _GEN_35) @[RAS.scala 26:23:@22.4]
    node _GEN_46 = mux(io_push_valid, _GEN_34, _GEN_36) @[RAS.scala 26:23:@22.4]
    node _stack_pos = _GEN_7 @[RAS.scala 24:11:@21.4 RAS.scala 24:11:@21.4 RAS.scala 24:11:@21.4 RAS.scala 24:11:@21.4 RAS.scala 24:11:@21.4 RAS.scala 24:11:@21.4 RAS.scala 24:11:@21.4 RAS.scala 24:11:@21.4 RAS.scala 24:11:@21.4]
    io_peek <= _stack_pos @[RAS.scala 24:11:@21.4]
    stack_0 <= _GEN_37 @[RAS.scala 28:18:@24.8 RAS.scala 31:22:@33.8]
    stack_1 <= _GEN_38 @[RAS.scala 28:18:@24.8 RAS.scala 31:22:@33.8]
    stack_2 <= _GEN_39 @[RAS.scala 28:18:@24.8 RAS.scala 31:22:@33.8]
    stack_3 <= _GEN_40 @[RAS.scala 28:18:@24.8 RAS.scala 31:22:@33.8]
    stack_4 <= _GEN_41 @[RAS.scala 28:18:@24.8 RAS.scala 31:22:@33.8]
    stack_5 <= _GEN_42 @[RAS.scala 28:18:@24.8 RAS.scala 31:22:@33.8]
    stack_6 <= _GEN_43 @[RAS.scala 28:18:@24.8 RAS.scala 31:22:@33.8]
    stack_7 <= _GEN_44 @[RAS.scala 28:18:@24.8 RAS.scala 31:22:@33.8]
    pos <= mux(reset, UInt<3>("h0"), _GEN_46) @[RAS.scala 32:11:@34.8 RAS.scala 36:9:@45.8]
    count <= mux(reset, UInt<4>("h0"), _GEN_45) @[RAS.scala 30:39:@31.10 RAS.scala 35:11:@44.8]
